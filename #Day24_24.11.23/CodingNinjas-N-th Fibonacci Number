You are given an integer 'N', your task is to find and return the N'th Fibonacci number using matrix exponentiation.
Since the answer can be very large, return the answer modulo 10 ^ 9 + 7
Fibonacci number is calculated using the following formula:
F(n) = F(n - 1) + F(n - 2)
Where, F(1) = F(2) = 1
For Example:
For N = 5 the output will be 5.


CODE:
import java.util.* ;
import java.io.*; 
public class Solution
{
    private static final int MOD = 1000000007;
    public static int fibonacciNumber(int n)
    {
        if (n <= 1) 
        {
            return n;
        }

        int[] fib = new int[n + 1];
        fib[0] = 0;
        fib[1] = 1;

        for (int i = 2; i <= n; i++)
        {
            fib[i] = (fib[i - 1] + fib[i - 2]) %MOD;
        }

        return fib[n];
        
    }
}
