For a given integer array/list 'ARR' of size 'N' containing all distinct values, find the total number of 'Inversions' that may exist.
An inversion is defined for a pair of integers in the array/list when the following two conditions are met.
A pair ('ARR[i]', 'ARR[J]') is said to be an inversion when:
1. ARR[i]> ARR[j]
2. 'i'<'j' -- Where "i" and "j" denote the indices ranging from [ 0 , N );


CODE:
import java.util.* ;
import java.io.*; 
public class Solution {
    public static long getInversions(long arr[], int n)
    {
        int count = 0;
        for(int i = 0 ; i < n ; i ++)
        {
            for(int j = 0 ; j < n ; j ++)
            {
                if(arr[i]>arr[j] && i < j)
                {
                    count ++;
                }
            }
        }   
        return count;
    }
}
