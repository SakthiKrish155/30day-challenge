Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.
An input string is valid if:
Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.


CODE:
class Solution {
    public boolean isValid(String s) 
    {
         Deque<Character> stack = new ArrayDeque<>();
         char ch[] = s.toCharArray();
         for(int i = 0 ; i < s.length() ; i ++)
         {
            char c = ch[i];
            if(stack.isEmpty())
               stack.push(c);
            else if(!stack.isEmpty() && ((stack.peek()=='(' && c == ')') || (stack.peek()== '{' && c == '}') || (stack.peek()=='[' && c == ']')) )
               stack.pop();
            else
               stack.push(c);   
         }
        if(stack.isEmpty())
            return true;
        else
            return false;    
    }
}
